<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0" 
					xmlns:cc="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.UI.Internal">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Microsoft.VisualStudio.Shell.UI.Internal;component/Themes/Generic.xaml" />
	</ResourceDictionary.MergedDictionaries>
	
	<!-- The VsComboBox class is inextricably coupled to the DataSource & command0bar system.
		 I copied all styles that reference it directly, changed them to target ComboBox, and
		 inherited all other resources directly from Shell.UI.Internal. -->

	<Style x:Key="SLaks.ComboBoxStyleKey" TargetType="{x:Type ComboBox}">
		<Setter Property="Control.Background" Value="#00FFFFFF" />
		<Setter Property="AutomationProperties.Name" Value="{Binding Path=Text, Converter={StaticResource AccessKeyRemovingConverter}}" />
		<Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}" />
		<Setter Property="Control.Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownTextBrushKey}}" />
		<Setter Property="Control.BorderThickness" Value="1" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="Control.VerticalContentAlignment" Value="Center" />
		<Setter Property="Control.Padding" Value="3,0,3,0" />
		<Setter Property="ItemsControl.ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ComboBoxItem}">
					<Setter Property="Control.BorderThickness" Value="1" />
					<Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
					<Setter Property="Control.Background" Value="#00FFFFFF" />
					<Setter Property="Control.Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarTextActiveBrushKey}}" />
					<Setter Property="AutomationProperties.Name" Value="{Binding Text}" />
					<Setter Property="AutomationProperties.AutomationId" Value="{Binding Text}" />
					<Setter Property="Control.Template" Value="{StaticResource VsComboBoxItemTemplate}" />
					<Setter Property="FrameworkElement.Margin" Value="2,0,2,0" />
					<Setter Property="InputMethod.IsInputMethodSuspended" Value="True" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Border Name="Border" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownBorderBrushKey}}" Background="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownBackgroundBrushKey}}">
						<Grid Name="MainGrid" SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition MinWidth="12" Width="0" />
							</Grid.ColumnDefinitions>
							<Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Placement="Bottom" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
								<vsui:SystemDropShadowChrome Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" MinWidth="{Binding ElementName=MainGrid, Path=ActualWidth}">
									<Border Name="DropDownBorder" BorderThickness="1" BorderBrush="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownPopupBorderBrushKey}}">
										<ScrollViewer>
											<Grid Background="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownPopupBackgroundGradientBrushKey}}" RenderOptions.ClearTypeHint="Enabled">
												<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
											</Grid>
										</ScrollViewer>
									</Border>
								</vsui:SystemDropShadowChrome>
							</Popup>
							<ToggleButton Name="ToggleButton" Grid.Column="0" Grid.ColumnSpan="2" Background="#00FFFFFF" BorderBrush="#00FFFFFF" TextElement.Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownGlyphBrushKey}}" Style="{DynamicResource DropDownToggleButton}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
							<ContentPresenter Grid.Column="0" IsHitTestVisible="False" Margin="{TemplateBinding Control.Padding}" Content="{TemplateBinding ComboBox.SelectedItem}" ContentTemplate="{TemplateBinding ItemsControl.ItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
							<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownButtonMouseOverSeparatorBrushKey}}" Property="Control.BorderBrush" />
							<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownButtonMouseOverBackgroundBrushKey}}" Property="Control.Background" />
							<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseOverGlyphBrushKey}}" Property="TextElement.Foreground" />
							<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseOverBackgroundGradientBrushKey}}" Property="Border.Background" />
							<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseOverBorderBrushKey}}" Property="Border.BorderBrush" />
							<Setter Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseOverTextBrushKey}}" Property="TextElement.Foreground" />
						</Trigger>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownButtonMouseOverSeparatorBrushKey}}" Property="Control.BorderBrush" />
							<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownButtonMouseOverBackgroundBrushKey}}" Property="Control.Background" />
							<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseOverGlyphBrushKey}}" Property="TextElement.Foreground" />
							<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseOverBackgroundGradientBrushKey}}" Property="Border.Background" />
							<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseOverBorderBrushKey}}" Property="Border.BorderBrush" />
							<Setter Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseOverTextBrushKey}}" Property="TextElement.Foreground" />
						</Trigger>
						<Trigger Property="ComboBox.IsDropDownOpen" Value="True">
							<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseDownBackgroundBrushKey}}" Property="Border.Background" />
							<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseDownBorderBrushKey}}" Property="Border.BorderBrush" />
							<Setter Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownMouseDownTextBrushKey}}" Property="TextElement.Foreground" />
						</Trigger>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter TargetName="ToggleButton" Property="Control.BorderBrush" Value="#00FFFFFF" />
							<Setter TargetName="ToggleButton" Property="Control.Background" Value="#00FFFFFF" />
							<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownDisabledGlyphBrushKey}}" Property="TextElement.Foreground" />
							<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownDisabledBorderBrushKey}}" Property="Border.BorderBrush" />
							<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownDisabledBackgroundBrushKey}}" Property="Border.Background" />
							<Setter Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownDisabledTextBrushKey}}" Property="Control.Foreground" />
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding ElementName=PART_Popup, Path=(Popup.HasDropShadow)}" Value="True" />
								<Condition Binding="{Binding Source={x:Static vsui:EnvironmentRenderCapabilities.Current}, Path=AreGradientsAllowed}" Value="True" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
							<Setter TargetName="Shdw" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropShadowBackgroundColorKey}}" Property="vsui:SystemDropShadowChrome.Color" />
						</MultiDataTrigger>
						<DataTrigger Value="False" Binding="{Binding Source={x:Static vsui:EnvironmentRenderCapabilities.Current}, Path=AreAnimationsAllowed}">
							<Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="ComboBox.IsEditable" Value="True">
				<Setter Property="Control.IsTabStop" Value="False" />
				<Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}" />
				<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxTextBrushKey}}" />
				<Setter Property="ComboBox.Text" Value="{Binding DisplayedText, Mode=TwoWay}" />
				<Setter Property="Control.Padding" Value="0" />
			</Trigger>
			<Trigger Property="ComboBox.IsEditable" Value="False">
				<Setter Property="InputMethod.IsInputMethodSuspended" Value="True" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
		<Border Name="Border" BorderThickness="1" BorderBrush="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxBorderBrushKey}}" Background="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxBackgroundBrushKey}}">
			<Grid Name="Placement" SnapsToDevicePixels="True">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<Popup Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
					<vsui:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent" FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" FrameworkElement.MinWidth="{Binding ElementName=Placement, Path=ActualWidth}">
						<Border Name="DropDownBorder" BorderThickness="1" BorderBrush="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxPopupBorderBrushKey}}">
							<ScrollViewer>
								<Grid Background="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxPopupBackgroundGradientBrushKey}}" RenderOptions.ClearTypeHint="Enabled">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
								</Grid>
							</ScrollViewer>
						</Border>
					</vsui:SystemDropShadowChrome>
				</Popup>
				<TextBox Name="PART_EditableTextBox" Grid.Column="0" Margin="0" Style="{StaticResource ComboBoxEditableTextBox}" Foreground="{TemplateBinding Control.Foreground}" SelectionBrush="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxSelectionBrushKey}}" VerticalAlignment="Center" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" CaretBrush="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
				<ToggleButton Name="ToggleButton" Grid.Column="1" Background="#00FFFFFF" BorderBrush="#00FFFFFF" TextElement.Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxGlyphBrushKey}}" Style="{StaticResource ComboBoxToggleButton}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
				<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxButtonMouseOverSeparatorBrushKey}}" Property="Control.BorderBrush" />
				<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxButtonMouseOverBackgroundBrushKey}}" Property="Control.Background" />
				<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverGlyphBrushKey}}" Property="TextElement.Foreground" />
				<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverBackgroundGradientBrushKey}}" Property="Border.Background" />
				<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverBorderBrushKey}}" Property="Border.BorderBrush" />
				<Setter Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverTextBrushKey}}" Property="TextElement.Foreground" />
			</Trigger>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxButtonMouseOverSeparatorBrushKey}}" Property="Control.BorderBrush" />
				<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxButtonMouseOverBackgroundBrushKey}}" Property="Control.Background" />
				<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverGlyphBrushKey}}" Property="TextElement.Foreground" />
				<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverBackgroundGradientBrushKey}}" Property="Border.Background" />
				<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverBorderBrushKey}}" Property="Border.BorderBrush" />
				<Setter Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverTextBrushKey}}" Property="TextElement.Foreground" />
			</Trigger>
			<Trigger Property="ComboBox.IsDropDownOpen" Value="True">
				<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseDownBackgroundBrushKey}}" Property="Border.Background" />
				<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseDownBorderBrushKey}}" Property="Border.BorderBrush" />
				<Setter Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseDownTextBrushKey}}" Property="TextElement.Foreground" />
			</Trigger>
			<Trigger Property="ItemsControl.HasItems" Value="False">
				<Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter TargetName="ToggleButton" Property="Control.BorderBrush" Value="#00FFFFFF" />
				<Setter TargetName="ToggleButton" Property="Control.Background" Value="#00FFFFFF" />
				<Setter TargetName="ToggleButton" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxDisabledGlyphBrushKey}}" Property="TextElement.Foreground" />
				<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxDisabledBorderBrushKey}}" Property="Border.BorderBrush" />
				<Setter TargetName="Border" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxDisabledBackgroundBrushKey}}" Property="Border.Background" />
				<Setter Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxDisabledTextBrushKey}}" Property="TextElement.Foreground" />
			</Trigger>
			<Trigger Property="ItemsControl.IsGrouping" Value="True">
				<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
			</Trigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding ElementName=PART_Popup, Path=(Popup.HasDropShadow)}" Value="True" />
					<Condition Binding="{Binding Source={x:Static vsui:EnvironmentRenderCapabilities.Current}, Path=AreGradientsAllowed}" Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
				<Setter TargetName="Shdw" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DropShadowBackgroundColorKey}}" Property="vsui:SystemDropShadowChrome.Color" />
			</MultiDataTrigger>
			<DataTrigger Value="False" Binding="{Binding Source={x:Static vsui:EnvironmentRenderCapabilities.Current}, Path=AreAnimationsAllowed}">
				<Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="VsComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
		<Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
			<ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
				<Setter TargetName="Bd" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverBackgroundGradientBrushKey}}" Property="Border.Background" />
				<Setter TargetName="Bd" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ComboBoxMouseOverBorderBrushKey}}" Property="Border.BorderBrush" />
				<Setter TargetName="Bd" Value="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarTextHoverBrushKey}}" Property="TextElement.Foreground" />
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Value="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarTextInactiveBrushKey}}" Property="Control.Foreground" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

</ResourceDictionary>